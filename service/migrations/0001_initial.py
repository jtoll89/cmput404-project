# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-22 21:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('host', models.CharField(blank=True, default='https://cmput404t02.herokuapp.com/service/', max_length=500, null=True)),
                ('displayName', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('url', models.CharField(blank=True, max_length=500, null=True)),
                ('github', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('firstName', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('lastName', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('bio', models.TextField(blank=True, default='', null=True)),
                ('friends', models.ManyToManyField(blank=True, related_name='_author_friends_+', to='service.Author')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('contentType', models.CharField(max_length=150)),
                ('published', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Author')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('accepted', models.NullBooleanField(default=None)),
                ('created', models.DateTimeField(auto_now=True)),
                ('requestee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestee', to='service.Author')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester', to='service.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Nodes',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('url', models.TextField(default=None)),
                ('username', models.TextField(default=None)),
                ('password', models.TextField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('source', models.CharField(max_length=150)),
                ('origin', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=150)),
                ('contentType', models.CharField(max_length=150)),
                ('content', models.TextField()),
                ('categories', models.TextField(null=True)),
                ('published', models.DateTimeField(auto_now=True)),
                ('visibility', models.CharField(choices=[('PRIVATE', 'PRIVATE'), ('SERVERONLY', 'SERVERONLY'), ('FRIENDS', 'FRIENDS'), ('FOAF', 'FOAF'), ('PUBLIC', 'PUBLIC')], default='0', max_length=10)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Author')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Post'),
        ),
    ]
